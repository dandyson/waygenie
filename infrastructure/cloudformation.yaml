AWSTemplateFormatVersion: 2010-09-09

Parameters:
  BucketName:
    Description: Unique name for your bucket. This will be in the S3 url to your React app.
    Type: String
  DomainName:
    Description: The domain name for your website (e.g., example.com)
    Type: String

Resources:
  MyBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName
      #  ----- TODO: this causes an error not listed in the error stacktrace when trying to deploy
      # AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html # default object served when visiting S3 domain
        ErrorDocument: index.html # just send to app, let React handle errors and routing
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        IgnorePublicAcls: false
        BlockPublicPolicy: false
        RestrictPublicBuckets: false

  MyBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref MyBucket # attach policy to the created bucket
      PolicyDocument:
        Id: MyPolicy
        Version: 2012-10-17
        Statement: 
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Join ['', ['arn:aws:s3:::', !Ref MyBucket, '/*']]

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        DefaultRootObject: index.html
        DefaultCacheBehavior:
          ViewerProtocolPolicy: redirect-to-https
          TargetOriginId: S3Origin
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6  # Managed-CachingOptimized
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
        Origins:
          - DomainName: !Select [2, !Split ["/", !GetAtt MyBucket.WebsiteURL]]
            Id: S3Origin
            CustomOriginConfig:
              OriginProtocolPolicy: http-only
              HTTPPort: 80
              HTTPSPort: 443
              OriginSSLProtocols: 
                - TLSv1.2
        ViewerCertificate:
          CloudFrontDefaultCertificate: true
        HttpVersion: http2

Outputs:
  WebsiteURL:
    Value: !GetAtt MyBucket.WebsiteURL
    Description: URL for website hosted on S3
  CloudFrontDomainName:
    Value: !GetAtt CloudFrontDistribution.DomainName
    Description: Domain name of CloudFront distribution