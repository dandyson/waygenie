name: CI/CD Pipeline

on:
  push:
    branches:
      - '**'  # Runs on push to any branch
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: |
            frontend/node_modules
            backend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies for frontend
        working-directory: frontend
        run: npm install

      - name: Run frontend tests
        working-directory: frontend
        run: npm run test:ci

      - name: Run linting for frontend
        working-directory: frontend
        run: npm run lint

      - name: Build frontend
        working-directory: frontend
        env:
          REACT_APP_API_URL: "${{ secrets.REACT_APP_API_URL }}"
          REACT_APP_API_KEY: "${{ secrets.OPENAI_API_KEY }}"
          REACT_APP_FRONTEND_URL: "${{ secrets.REACT_APP_FRONTEND_URL }}"
          REACT_APP_AUTH0_DOMAIN: "${{ secrets.AUTH0_TEST_DOMAIN }}"
          REACT_APP_AUTH0_CLIENT_ID: "${{ secrets.AUTH0_TEST_CLIENT_ID }}"
          REACT_APP_AUTH0_AUDIENCE: "${{ secrets.AUTH0_TEST_AUDIENCE }}"
          REACT_APP_CLOUDFRONT_URL: "${{ secrets.REACT_APP_CLOUDFRONT_URL }}"
        run: npm run build

      - name: Debug Environment Variables
        run: |
          echo "CLOUDFRONT URL: $REACT_APP_CLOUDFRONT_URL"
        env:
          REACT_APP_CLOUDFRONT_URL: "${{ secrets.REACT_APP_CLOUDFRONT_URL }}"


      - name: Install dependencies for backend
        working-directory: backend
        run: npm install

      - name: Start backend server
        working-directory: backend
        run: |
          npm start &
          sleep 10  # Give the server time to start
        env:
          REDISCLOUD_URL: "redis://localhost:6379"
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          AUTH0_DOMAIN: ${{ secrets.AUTH0_TEST_DOMAIN }}
          AUTH0_AUDIENCE: ${{ secrets.AUTH0_TEST_AUDIENCE }}
          AUTH0_CLIENT_ID: ${{ secrets.AUTH0_TEST_CLIENT_ID }}
          AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_TEST_CLIENT_SECRET }}
          PORT: 5000
          NODE_ENV: 'test'
          FRONTEND_URL: 'http://localhost:3000'

      - name: Debug Environment
        run: |
          echo "Checking frontend..."
          curl -v http://localhost:3000 || true
          echo "Checking backend..."
          curl -v http://localhost:5000/health || true
          echo "Environment variables set:"
          env | grep -E 'REACT_APP_|CYPRESS_|AUTH0_' | sort
          echo "Process list:"
          ps aux | grep -E 'node|npm'
          echo "Network ports:"
          netstat -tulpn || true

      # Then run Cypress tests ðŸ§ª
      - name: Run E2E tests ðŸ§ª
        uses: cypress-io/github-action@v6
        with:
          working-directory: frontend
          start: npm start
          wait-on: 'http://localhost:3000, http://localhost:5000/health'
          wait-on-timeout: 120
          browser: chrome
          config: |
            baseUrl=http://localhost:3000
            chromeWebSecurity=false
            experimentalModifyObstructiveThirdPartyCode=true
          record: false
        env:
          # Auth0 Test Environment Variables
          REACT_APP_AUTH0_DOMAIN: ${{ secrets.AUTH0_TEST_DOMAIN }}
          REACT_APP_AUTH0_CLIENT_ID: ${{ secrets.AUTH0_TEST_CLIENT_ID }}
          REACT_APP_AUTH0_AUDIENCE: ${{ secrets.AUTH0_TEST_AUDIENCE }}
          
          # Cypress Auth0 Variables
          CYPRESS_auth_url: ${{ secrets.AUTH0_TEST_DOMAIN }}
          CYPRESS_auth_client_id: ${{ secrets.AUTH0_TEST_CLIENT_ID }}
          CYPRESS_auth_client_secret: ${{ secrets.AUTH0_TEST_CLIENT_SECRET }}
          CYPRESS_auth_username: ${{ secrets.CYPRESS_AUTH_USERNAME }}
          CYPRESS_auth_password: ${{ secrets.CYPRESS_AUTH_PASSWORD }}
          
          # API and Backend Variables
          REACT_APP_API_URL: "http://localhost:5000"  # Point to local backend
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          REDISCLOUD_URL: 'redis://localhost:6379'
          
          # Debug and CI Variables
          DEBUG: "cypress:*"
          CI: true
          PORT: 3000

      - name: Store test artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: cypress-artifacts
          path: |
            frontend/cypress/screenshots
            frontend/cypress/videos

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install and build frontend
        working-directory: frontend
        run: |
          npm install
          npm run build
        env:
          REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}
          REACT_APP_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          REACT_APP_FRONTEND_URL: ${{ secrets.REACT_APP_FRONTEND_URL }}
          REACT_APP_AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
          REACT_APP_AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
          REACT_APP_AUTH0_AUDIENCE: ${{ secrets.AUTH0_AUDIENCE }}
          REACT_APP_CLOUDFRONT_URL: ${{ secrets.REACT_APP_CLOUDFRONT_URL }}

      - name: Upload frontend to S3
        run: |
          aws s3 sync frontend/build/ s3://waygenie --delete
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'eu-west-2'

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation --distribution-id E2F0KOSSD5OYR3 --paths "/*"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'eu-west-2'

      - name: Deploy backend to Heroku
        run: |
          git subtree push --prefix backend https://heroku:${{ secrets.HEROKU_API_KEY }}@git.heroku.com/${{ secrets.HEROKU_APP_NAME }}.git main
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}

      - name: Debug production env variables
        run: |
          echo "REACT_APP_AUTH0_DOMAIN is set: ${{ secrets.AUTH0_DOMAIN != '' }}"
          echo "REACT_APP_AUTH0_CLIENT_ID is set: ${{ secrets.AUTH0_CLIENT_ID != '' }}"
          echo "REACT_APP_AUTH0_AUDIENCE is set: ${{ secrets.AUTH0_AUDIENCE != '' }}"